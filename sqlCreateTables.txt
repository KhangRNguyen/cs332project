CREATE TABLE professor(
    ssn MEDIUMINT NOT NULL ,
    name VARCHAR(100) ,
    street VARCHAR(100) ,
    city VARCHAR(100) ,
    state VARCHAR(40) ,
    zip SMALLINT ,
    area_code SMALLINT ,
    phone_num MEDIUMINT ,
    sex VARCHAR(1) ,
    title VARCHAR(100) ,
    salary MEDIUMINT ,
    PRIMARY KEY ( ssn )
   );

CREATE TABLE department(
    d_no MEDIUMINT NOT NULL,
    d_name VARCHAR (100),
    d_phone MEDIUMINT,
    location VARCHAR (100),
    chairperson MEDIUMINT,
    FOREIGN KEY ( chairperson ) REFERENCES professor( ssn ),
    PRIMARY KEY (d_no)
    );
    
CREATE TABLE course(
    c_no MEDIUMINT NOT NULL,
    c_title VARCHAR (100),
    textbook VARCHAR (100),
    unit INT,
    c_d_number MEDIUMINT,
    FOREIGN KEY ( c_d_number ) REFERENCES department (d_no),
    PRIMARY KEY(c_no)
    );
    
CREATE TABLE section(
    s_no MEDIUMINT NOT NULL,
    classroom INT,
    days VARCHAR(3),
    b_time MEDIUMINT,
    e_time MEDIUMINT,
    seats INT,
    s_professor MEDIUMINT,
    course_no MEDIUMINT,
    FOREIGN KEY (course_no ) REFERENCES course(c_no),
    FOREIGN KEY (s_professor) REFERENCES professor(ssn),
    PRIMARY KEY (s_no)
    );
    
CREATE TABLE student(
    cwid MEDIUMINT NOT NULL,
    f_name VARCHAR(40),
    l_name VARCHAR(40),
    s_address VARCHAR(50),
    s_phone MEDIUMINT,
    major MEDIUMINT,
    FOREIGN KEY ( major ) REFERENCES department (d_no),
    PRIMARY KEY (cwid)
    );
    
CREATE TABLE enrollment_record(
    r_cwid MEDIUMINT,
    r_s_no MEDIUMINT,
    grade VARCHAR(2),
    FOREIGN KEY (r_cwid ) REFERENCES student(cwid),
    FOREIGN KEY (r_s_no) REFERENCES section(s_no)
    );
    
CREATE TABLE prof_degrees(
    p_ssn MEDIUMINT,
    degree VARCHAR(64),
    FOREIGN KEY (p_ssn ) REFERENCES professor(ssn)
    );
    
CREATE TABLE minor(
    m_cwid MEDIUMINT,
    m_d_no MEDIUMINT,
    FOREIGN KEY (m_cwid ) REFERENCES student(cwid),
    FOREIGN KEY (m_d_no) REFERENCES department(d_no)
    );
    
CREATE TABLE prerequisite(
    pre_c_no MEDIUMINT,
    pre_p_no MEDIUMINT,
    FOREIGN KEY (pre_c_no ) REFERENCES course(c_no),
    FOREIGN KEY (pre_p_no) REFERENCES course(c_no)
    );
